/**********************************************************************************************************************
***********************************************      CODE SNIPPETS      ***********************************************
***********************************************************************************************************************/
• Useful Packages
        import CoreLocation // Location ~ Use devices location
• Image Literal
        #imageLiteral(resourceName: "DiceFour")
• Optional Chaining
        optional?.property
        optional?.method()
• Nil Coalescing
        optional ?? defaultValue
• Delegate: Connect UI Text Field to Controller
        class MyViewController: UIViewController, UITextFieldDelegate {
            let textField = UITextField()   // Create a delegate
            textField.delegate = self       // Connect delegate to current class

            // Define UITextFieldDelegate Protocol required function
            func textFieldDidBeginEditing() { /* DO STUFF */}
        }            
• Convert Int array to String array
        let array = [1, 2, 3]
        let newArray = array.map{"\($0)"}
• Convert JSON Data Object into a String
        // Most common encoding for web requests is utf8.
        let dataString = String(data: data, encoding: .utf8)
• Protocols
    + Can be helpful organizing our code; for every DataType, we can create an extension that adopts a diff protocol.
        extension SomeType: SomeProtocol {
            // Add new functionality
        }
• Setting up Location in application
        Step 0. Create new key/value pair in info.plist file.    // Privacy - Location :: My Message to User
        Step 1. import CoreLocation                              // Import required package
        Step 2. let locationManager = CLLocationManager()        // Core Location Manager
        Step 3. locationManager.delegate = self                  // Listener: Location Manager
        Step 4. locationManager.requestWhenInUseAuthorization()  // Alert User: Request Current Location
        Step 5. locationManager.requestLocation()                // Request: Make actual request to get location
        Step 6. extension MyVC: CLLocationManagerDelegate {...}  // Define required functions
• Separate single file into multiple sections
        // MARK: - SectionName
• Basic Loop
        let fruitBasket = ["Apple, "Orange", "Banana"]
        for fruit in fruitBasket {
                print(fruit)
        }
• Initiate a Set
        let fruits: Set = [ "Apple", "Pear", "Orange" ] // Order not maintained like an array is
• Text 'Animation' - Add a 'Typing' Animation to label text (Not technically animation, but eh.)
        let titleText = "⚡️FlashChat"
        var charIndex = 0.0
        for letter in titleText {
            Timer.scheduledTimer(withTimeInterval: 0.1 * charIndex, repeats: false) { (timer) in
                self.titleLabel.text?.append(letter)
            }
            charIndex += 1
        }
• Add Cocoa Pods to a xCode Project
        1. Open terminal & cd to project directory, then run:
                pod init
        2. Open the newly created 'Podfile', created in step one.
        3. Add the 'Pods' we want to include in our project.
• Constants File
        // Commonly shortened to 'K'; clearly, cooler than 'C'... smh.
        struct K {
                static let appTitle = "Awesome Title"
                static func typeMethod() { // Do Stuff }
                struct Segue {
                        static let toSomeRandomView = "toSomeRandomView"
                }
        }
• Retrieve from dictionary
        let valueForMyKey = dictionary["Key"]
• Make table view row flash when selected instead of the default gray highlight.
        override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {        
                tableView.deselectRow(at: indexPath, animated: true)
        }
• Persist/Save data or user preferences in UserDefaults
        let defaults = UserDefaults.standard            // Get User Defaults
        defaults.set(0.24, forKey: "Volume")            // Set User Preference
        let volume = defaults.float(forKey: "Volume")   // Retrieve Volume from User Defaults
• Ternary Operator Example
        cell.accessoryType = item.done ? .checkmark : .none  // (Un)Check Cell Row in TableView
• Methods with Default Values
        //    External ↓   Intern ↓            Default Value ↓
        func loadItems(with request: NSFetchRequest<Item> = Item.fetchRequest()) { ... }
        // Call function multiple ways...
        loadItems() // Forces use of default value
        loadItems(with: request) // Passing in some request we manually setup with sorts n such
• Print location of UserDefaults File Path

• Print location of Realm File Path
        
• Valid Array Inits
        let array = [1, 2, 3]                  // Init Using Type Inference
        let array = [Int]()                    // Init Empty Array of Integers
        let array: [Int] = [1, 2, 3]           // Init Array of type Integer equal to 1, 2, 3
        let array: Array<Int> = [1, 2, 3]      // Init Array of type Integer equal to 1, 2, 3
        let array = Array<Int>()               // Init Empty Array of Integers
